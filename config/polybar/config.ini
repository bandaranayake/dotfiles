[colors]
; Values in the X resources db can be referenced using:
; NOTE: Requires `+xrm` (compiled with `xcb-util-xrm` dependency)
; Example: 
; Polybar config:
;     background = ${xrdb:color2:#00ff00}
; .Xresources:
;     *color2: #8C9440
;key = ${xrdb:KEY:fallback value}

black = #141414
;black = ${xrdb:color0}
white = ${xrdb:color7}

red = ${xrdb:color1}
green = ${xrdb:color2}
yellow = ${xrdb:color3}
blue = ${xrdb:color4}
magenta = ${xrdb:color5}
cyan = ${xrdb:color6}

[bar/main]
; If no monitor is given, the primary monitor is used if it exists
; Use the value of the environment variable MONITOR
; Fallback value: eDP-1 (Embedded Display)
monitor = ${env:MONITOR:eDP-1}

; Dimension defined as pixel value (e.g. 35) or percentage (e.g. 50%),
; the percentage can optionally be extended with a pixel offset like so:
; 50%:-10, this will result in a width or height of 50% minus 10 pixels
width = 100%
height = 28

; Offset defined as pixel value (e.g. 35) or percentage (e.g. 50%)
; the percentage can optionally be extended with a pixel offset like so:
; 50%:-10, this will result in an offset in the x or y direction 
; of 50% minus 10 pixels
offset-x = 0
offset-y = 0

; Background ARGB color (e.g. #f00, #ff992a, #ddff1023)
background = ${colors.black}

; Foreground ARGB color (e.g. #f00, #ff992a, #ddff1023)
foreground = ${colors.white}

; Background gradient (vertical steps)
;   background-[0-9]+ = #aarrggbb
;background-0 = 

; Value used for drawing rounded corners
; Note: This shouldn't be used together with border-size because the border 
; doesn't get rounded. For this to work you may also need to enable 
; pseudo-transparency or use a compositor like picom.
; Individual values can be defined using:
;   radius-{top,bottom}
; or
;   radius-{top,bottom}-{left,right} (unreleased)
; Polybar always uses the most specific radius definition for each corner.
radius = 0.0

; Under-/overline pixel size and argb color
; Individual values can be defined using:
;   {overline,underline}-size
;   {overline,underline}-color
line-size = 0
line-color = #f00

; Values applied to all borders
; Individual side values can be defined using:
;   border-{left,top,right,bottom}-size
;   border-{left,top,right,bottom}-color
; The top and bottom borders are added to the bar height, so the effective
; window height is:
;   height + border-top-size + border-bottom-size
; Meanwhile the effective window width is defined entirely by the width key and
; the border is placed within this area. So you effectively only have the
; following horizontal space on the bar:
;   width - border-right-size - border-left-size
; border-size can be defined as pixel value (e.g. 35) or percentage (e.g. 50%),
; the percentage can optionally be extended with a pixel offset like so:
; 50%:-10, this will result in 50% minus 10 pixels. The percentage is relative
; to the monitor width or height depending on the border direction. 
border-size =
border-color = 

; Number of spaces to add at the beginning/end of the bar
; Individual side values can be defined using:
;   padding-{left,right}
padding-left = 2
padding-right = 2

; Number of spaces to add before/after each module
; Individual side values can be defined using:
;   module-margin-{left,right}
module-margin-left = 1
module-margin-right = 1

; Fonts are defined using <font-name>;<vertical-offset>
; Font names are specified using a fontconfig pattern.
;   font-0 = NotoSans-Regular:size=8;2
;   font-1 = MaterialIcons:size=10
;   font-2 = Termsynu:size=8;-1
;   font-3 = FontAwesome:size=10
; See the Fonts wiki page for more details
font-0 = "Iosevka Nerd Font:size=10;4"
font-1 = "feather:size=12;4"

; Modules are added to one of the available blocks
;   modules-left = cpu ram
;   modules-center = xwindow xbacklight
;   modules-right = ipc clock
modules-left = bspwm separator cpu memory 
modules-center = date
modules-right = alsa backlight-acpi separator wlan battery 

; The separator will be inserted between the output of each module
; This has the same properties as a label
separator =

; Opacity value between 0.0 and 1.0 used on fade in/out
dim-value = 1.0

; Value to be used to set the WM_NAME atom
; If the value is empty or undefined, the atom value
; will be created from the following template: polybar-[BAR]_[MONITOR]
; NOTE: The placeholders are not available for custom values
;wm-name =

; Locale used to localize various module data (e.g. date)
; Expects a valid libc locale, for example: sv_SE.UTF-8
;locale = 

; Position of the system tray window
; If empty or undefined, tray support will be disabled
; NOTE: A center aligned tray will cover center aligned modules
;
; Available positions:
;   left
;   center
;   right
;   none
;tray-position =

; If true, the bar will not shift its
; contents when the tray changes
;tray-detached = false

; Tray icon max size
;tray-maxsize = 16

; Background color for the tray container 
; ARGB color (e.g. #f00, #ff992a, #ddff1023)
; By default the tray container will use the bar
; background color.
tray-background = ${root.background}

; Tray offset defined as pixel value (e.g. 35) or percentage (e.g. 50%)
tray-offset-x = 0
tray-offset-y = 0

; Pad the sides of each tray icon
tray-padding = 0

; Scale factor for tray clients
tray-scale = 1.0

; Restack the bar window and put it above the
; selected window manager's root
;
; Fixes the issue where the bar is being drawn
; on top of fullscreen window's
;
; Currently supported WM's:
;   bspwm
;   i3 (requires: `override-redirect = true`)
wm-restack = bspwm

; Set a DPI values used when rendering text
; This only affects scalable fonts
; Set this to 0 to let polybar calculate the dpi from the screen size.
; dpi = 
dpi-x = 96
dpi-y = 96

; Enable support for inter-process messaging
; See the Messaging wiki page for more details.
enable-ipc = false

; Fallback click handlers that will be called if
; there's no matching module handler found.
click-left = 
click-middle = 
click-right =
scroll-up =
scroll-down =
double-click-left =
double-click-middle =
double-click-right =

; Requires polybar to be built with xcursor support (xcb-util-cursor)
; Possible values are:
; - default   : The default pointer as before, can also be an empty string (default)
; - pointer   : Typically in the form of a hand
; - ns-resize : Up and down arrows, can be used to indicate scrolling
cursor-click = pointer
cursor-scroll = pointer

[module/separator]
type = custom/text
content = "|"

[module/bspwm]
type = internal/bspwm

ws-icon-0 = 1;
ws-icon-1 = 2;
ws-icon-2 = 3;
ws-icon-3 = 4;
ws-icon-4 = 5;
ws-icon-default = 

format = <label-state>

label-focused = %icon%
label-focused-foreground = ${colors.red}
label-occupied = %icon%
label-urgent = %icon%
label-empty = %icon% 

label-separator = " "
label-separator-padding = 1

[module/date]
type = internal/date
interval = 1.0

date = "%A, %B %d, %Y"
date-alt = " %d/%m/%Y"

time = "%I:%M %p"
time-alt = "%I:%M %p" 

format-prefix = " "
format-prefix-foreground = ${colors.green}

label = %date% | %time%

[module/cpu]
type = internal/cpu

interval = 1

format = <label>
format-prefix = 
format-prefix-foreground = ${colors.yellow}

label = " %percentage%%"

[module/memory]
type = internal/memory

interval = 1

format = <label>
format-prefix = 
format-prefix-foreground = ${colors.magenta}

label = " %gb_used%"

[module/wlan]
type = internal/network
interface = wlo1 
interval = 3.0

format-connected = <label-connected>
format-connected-prefix = 
format-connected-prefix-foreground = ${colors.cyan}

format-disconnected = <label-disconnected>
format-disconnected-prefix = 
format-disconnected-prefix-foreground = ${colors.red}

label-connected = " %essid%"
label-disconnected = " Disconnected" 

[module/battery]
type = internal/battery

battery = BAT0
adapter = AC
full-at = 98

poll-interval = 2
time-format = %H:%M

format-charging = <label-charging>
format-charging-prefix = ""
format-charging-prefix-foreground = ${colors.yellow}

format-discharging = <label-discharging>
format-discharging-prefix = ""
format-discharging-prefix-foreground = ${colors.red}

format-full = <label-full>
format-full-prefix = 
format-full-prefix-foreground = ${colors.green}

label-charging = " %percentage%%"
label-discharging = " %percentage%%"
label-full = " Full"

[module/backlight-acpi]
type = internal/backlight
card = intel_backlight
enable-scroll = true

format = <ramp> <label>
label = %percentage%%

ramp-0 = 
ramp-1 = 
ramp-2 = 
ramp-3 = 
ramp-4 = 
ramp-foreground = ${colors.yellow}

[module/alsa]
type = internal/alsa

interval = 5

format-volume = <ramp-volume> <label-volume>

format-muted= <label-muted>
format-muted-prefix = 
format-muted-prefix-foreground = ${colors.red}

label-volume = %percentage%%
label-muted = " Muted"

ramp-volume-0 = 
ramp-volume-1 = 
ramp-volume-2 = 
ramp-volume-foreground = ${colors.blue}

[settings]
; The throttle settings lets the eventloop swallow up til X events
; if they happen within Y millisecond after first event was received.
; This is done to prevent flood of update event.
;
; For example if 5 modules emit an update event at the same time, we really
; just care about the last one. But if we wait too long for events to swallow
; the bar would appear sluggish so we continue if timeout
; expires or limit is reached.
throttle-output = 5
throttle-output-for = 10


; Reload upon receiving XCB_RANDR_SCREEN_CHANGE_NOTIFY events
screenchange-reload = true

; Compositing operators
; @see: https://www.cairographics.org/manual/cairo-cairo-t.html#cairo-operator-t
compositing-background = source
compositing-foreground = over
compositing-overline = over
compositing-underline = over
compositing-border = over

; Define fallback values used by all module formats
format-foreground = 
format-background = 
format-underline =
format-overline =
format-spacing =
format-padding =
format-margin =
format-offset =

; Enables pseudo-transparency for the bar
; If set to true the bar can be transparent without a compositor.
pseudo-transparency = false

[global/wm]
; Adjust the _NET_WM_STRUT_PARTIAL bottom value
;   Used for bottom aligned bars
margin-top = 5

; Adjust the _NET_WM_STRUT_PARTIAL top value
;   Used for top aligned bars
margin-bottom = 5
